Binding on line 8: integer was declared as <type decl> on line -1
Binding on line 10: integer was declared as <type decl> on line -1
Binding on line 12: integer was declared as <type decl> on line -1
Binding on line 12: integer was declared as <type decl> on line -1
Binding on line 12: integer was declared as <type decl> on line -1
Binding on line 12: integer was declared as <type decl> on line -1
Binding on line 12: integer was declared as <type decl> on line -1
Binding on line 13: integer was declared as <type decl> on line -1
Binding on line 13: integer was declared as <type decl> on line -1
Binding on line 13: integer was declared as <type decl> on line -1
Binding on line 13: integer was declared as <type decl> on line -1
Binding on line 13: integer was declared as <type decl> on line -1
Binding on line 14: integer was declared as <type decl> on line -1
Binding on line 14: integer was declared as <type decl> on line -1
Binding on line 16: integer was declared as <type decl> on line -1
Binding on line 17: integer was declared as <type decl> on line -1
Binding on line 19: integer was declared as <type decl> on line -1
Binding on line 21: a was declared as <var decl> a on line 12
Binding on line 21: y was declared as <param decl> on line 10
Type check left mod operand on line 21: type Integer vs type Integer
Type check right mod operand on line 21: type Integer vs type Integer
Type check := on line 21: type Integer vs type Integer
Binding on line 22: b was declared as <var decl> b on line 12
Binding on line 22: y was declared as <param decl> on line 10
Type check left div operand on line 22: type Integer vs type Integer
Type check right div operand on line 22: type Integer vs type Integer
Type check := on line 22: type Integer vs type Integer
Binding on line 23: c was declared as <var decl> c on line 12
Binding on line 23: y was declared as <param decl> on line 10
Type check left mod operand on line 23: type Integer vs type Integer
Type check right mod operand on line 23: type Integer vs type Integer
Type check := on line 23: type Integer vs type Integer
Binding on line 24: d was declared as <var decl> d on line 12
Binding on line 24: b was declared as <var decl> b on line 12
Type check left div operand on line 24: type Integer vs type Integer
Type check right div operand on line 24: type Integer vs type Integer
Type check := on line 24: type Integer vs type Integer
Binding on line 25: e was declared as <var decl> e on line 12
Binding on line 25: b was declared as <var decl> b on line 12
Type check left mod operand on line 25: type Integer vs type Integer
Type check right mod operand on line 25: type Integer vs type Integer
Type check := on line 25: type Integer vs type Integer
Binding on line 26: f was declared as <var decl> f on line 13
Binding on line 26: b was declared as <var decl> b on line 12
Type check left + operand on line 26: type Integer vs type Integer
Type check right + operand on line 26: type Integer vs type Integer
Type check left div operand on line 26: type Integer vs type Integer
Type check right div operand on line 26: type Integer vs type Integer
Type check := on line 26: type Integer vs type Integer
Binding on line 27: g was declared as <var decl> g on line 13
Binding on line 27: b was declared as <var decl> b on line 12
Binding on line 27: f was declared as <var decl> f on line 13
Type check left - operand on line 27: type Integer vs type Integer
Type check right - operand on line 27: type Integer vs type Integer
Type check left + operand on line 27: type Integer vs type Integer
Type check right + operand on line 27: type Integer vs type Integer
Type check left div operand on line 27: type Integer vs type Integer
Type check right div operand on line 27: type Integer vs type Integer
Type check := on line 27: type Integer vs type Integer
Binding on line 28: h was declared as <var decl> h on line 13
Binding on line 28: a was declared as <var decl> a on line 12
Type check left * operand on line 28: type Integer vs type Integer
Type check right * operand on line 28: type Integer vs type Integer
Binding on line 28: b was declared as <var decl> b on line 12
Binding on line 28: d was declared as <var decl> d on line 12
Binding on line 28: g was declared as <var decl> g on line 13
Type check left + operand on line 28: type Integer vs type Integer
Type check right + operand on line 28: type Integer vs type Integer
Type check left - operand on line 28: type Integer vs type Integer
Type check right - operand on line 28: type Integer vs type Integer
Type check left - operand on line 28: type Integer vs type Integer
Type check right - operand on line 28: type Integer vs type Integer
Type check left + operand on line 28: type Integer vs type Integer
Type check right + operand on line 28: type Integer vs type Integer
Type check left mod operand on line 28: type Integer vs type Integer
Type check right mod operand on line 28: type Integer vs type Integer
Type check := on line 28: type Integer vs type Integer
Binding on line 29: i was declared as <var decl> i on line 13
Binding on line 29: c was declared as <var decl> c on line 12
Type check left div operand on line 29: type Integer vs type Integer
Type check right div operand on line 29: type Integer vs type Integer
Type check := on line 29: type Integer vs type Integer
Binding on line 30: k was declared as <var decl> k on line 13
Binding on line 30: c was declared as <var decl> c on line 12
Type check left mod operand on line 30: type Integer vs type Integer
Type check right mod operand on line 30: type Integer vs type Integer
Type check := on line 30: type Integer vs type Integer
Binding on line 31: l was declared as <var decl> l on line 14
Binding on line 31: e was declared as <var decl> e on line 12
Type check left * operand on line 31: type Integer vs type Integer
Type check right * operand on line 31: type Integer vs type Integer
Binding on line 31: i was declared as <var decl> i on line 13
Type check left * operand on line 31: type Integer vs type Integer
Type check right * operand on line 31: type Integer vs type Integer
Binding on line 31: h was declared as <var decl> h on line 13
Binding on line 31: k was declared as <var decl> k on line 13
Type check left + operand on line 31: type Integer vs type Integer
Type check right + operand on line 31: type Integer vs type Integer
Type check left + operand on line 31: type Integer vs type Integer
Type check right + operand on line 31: type Integer vs type Integer
Type check left - operand on line 31: type Integer vs type Integer
Type check right - operand on line 31: type Integer vs type Integer
Type check left - operand on line 31: type Integer vs type Integer
Type check right - operand on line 31: type Integer vs type Integer
Type check left mod operand on line 31: type Integer vs type Integer
Type check right mod operand on line 31: type Integer vs type Integer
Type check := on line 31: type Integer vs type Integer
Binding on line 32: m was declared as <var decl> m on line 14
Binding on line 32: a was declared as <var decl> a on line 12
Binding on line 32: h was declared as <var decl> h on line 13
Type check left * operand on line 32: type Integer vs type Integer
Type check right * operand on line 32: type Integer vs type Integer
Binding on line 32: l was declared as <var decl> l on line 14
Type check left * operand on line 32: type Integer vs type Integer
Type check right * operand on line 32: type Integer vs type Integer
Type check left + operand on line 32: type Integer vs type Integer
Type check right + operand on line 32: type Integer vs type Integer
Type check left + operand on line 32: type Integer vs type Integer
Type check right + operand on line 32: type Integer vs type Integer
Type check left div operand on line 32: type Integer vs type Integer
Type check right div operand on line 32: type Integer vs type Integer
Type check := on line 32: type Integer vs type Integer
Binding on line 34: month was declared as <var decl> month on line 16
Binding on line 34: h was declared as <var decl> h on line 13
Binding on line 34: l was declared as <var decl> l on line 14
Binding on line 34: m was declared as <var decl> m on line 14
Type check left * operand on line 34: type Integer vs type Integer
Type check right * operand on line 34: type Integer vs type Integer
Type check left + operand on line 34: type Integer vs type Integer
Type check right + operand on line 34: type Integer vs type Integer
Type check left - operand on line 34: type Integer vs type Integer
Type check right - operand on line 34: type Integer vs type Integer
Type check left + operand on line 34: type Integer vs type Integer
Type check right + operand on line 34: type Integer vs type Integer
Type check left div operand on line 34: type Integer vs type Integer
Type check right div operand on line 34: type Integer vs type Integer
Type check := on line 34: type Integer vs type Integer
Binding on line 35: day was declared as <var decl> day on line 17
Binding on line 35: h was declared as <var decl> h on line 13
Binding on line 35: l was declared as <var decl> l on line 14
Binding on line 35: m was declared as <var decl> m on line 14
Type check left * operand on line 35: type Integer vs type Integer
Type check right * operand on line 35: type Integer vs type Integer
Type check left + operand on line 35: type Integer vs type Integer
Type check right + operand on line 35: type Integer vs type Integer
Type check left - operand on line 35: type Integer vs type Integer
Type check right - operand on line 35: type Integer vs type Integer
Type check left + operand on line 35: type Integer vs type Integer
Type check right + operand on line 35: type Integer vs type Integer
Type check left mod operand on line 35: type Integer vs type Integer
Type check right mod operand on line 35: type Integer vs type Integer
Type check left + operand on line 35: type Integer vs type Integer
Type check right + operand on line 35: type Integer vs type Integer
Type check := on line 35: type Integer vs type Integer
Binding on line 37: month was declared as <var decl> month on line 16
Type check = operands on line 37: type Integer vs type Integer
Type check if-test on line 37: type Boolean vs type Boolean
Binding on line 38: write was declared as <proc decl> on line -1
Binding on line 38: day was declared as <var decl> day on line 17
Binding on line 38: y was declared as <param decl> on line 10
Binding on line 38: eol was declared as <const decl> eol on line -1
Binding on line 40: write was declared as <proc decl> on line -1
Binding on line 40: day was declared as <var decl> day on line 17
Binding on line 40: y was declared as <param decl> on line 10
Binding on line 40: eol was declared as <const decl> eol on line -1
Binding on line 44: y was declared as <var decl> y on line 8
Type check := on line 44: type Integer vs type Integer
Binding on line 45: y was declared as <var decl> y on line 8
Type check <= operands on line 45: type Integer vs type Integer
Type check while-test on line 45: type Boolean vs type Boolean
Binding on line 47: easter was declared as <proc decl> on line 10
Binding on line 47: y was declared as <var decl> y on line 8
Type check param #1 on line 47: type Integer vs type Integer
Binding on line 47: y was declared as <var decl> y on line 8
Binding on line 47: y was declared as <var decl> y on line 8
Type check left + operand on line 47: type Integer vs type Integer
Type check right + operand on line 47: type Integer vs type Integer
Type check := on line 47: type Integer vs type Integer
